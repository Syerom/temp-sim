<ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>
>>>>>>>>>>>>>>>> []
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108258bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108682090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108682490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108682790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086829d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108682d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10868c090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10868c490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10868ca50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10868cb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10868cf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108696110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108696290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108696410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108696590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108696710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108696890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108696a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108696b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10869e050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10869e190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10869e590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10869e6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10869e850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10869e9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10869eb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10869ecd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10869ee50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10869efd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086a4190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086a4310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086a4790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086a48d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086a4a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086a4bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086a4cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086ab110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086ab410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086ab410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086ab5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086ab6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086aba50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086abd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086abd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086abf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086b3150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086b34d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086b3810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086b3810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086b3b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086b3b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086b3f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086bb0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086bb250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086bb3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086bb550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086bb8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086bbc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086bbc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086bbe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086c3350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086c3490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086c3650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086c3850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086c3cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086c3e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086c3fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086ca4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086ca8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086caa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086cae90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086cafd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::AttributeValue&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::AttributeValue&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086d3110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086d35d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086d3750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086d3b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086d3e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086db150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086db310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086db9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086dbcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086dbfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086e3150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086e3590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086e3a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086e3b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086e3e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086eb1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086eb310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086eb490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086eb890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086eba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086ebb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086f2090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086f24d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086f2910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086f2d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086fc350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086fc810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::Name &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::Name &' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086fcc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1086fcdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108704310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108704510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::Name')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::Name' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108704950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108704a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108704e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10870b350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10870b810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::name::Component')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::name::Component' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10870bf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108714110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::name::Component')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::name::Component' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108714510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108714690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned char')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned char' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108714790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::name::Component')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::name::Component' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108714bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108714d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Interest&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Interest&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10871c250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Data&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Data&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10871c9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::L3Protocol>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::L3Protocol>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::L3Protocol *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108724350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Object>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Object>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x1085922d0>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108724610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::nfd::Forwarder>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::nfd::Forwarder>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108724910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108724e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::Fib&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::Fib&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10872c310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::Pit&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::Pit&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10872c810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::Cs&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::Cs&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10872cd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108736250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108736710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108736910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108736a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108736f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10873c0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10873c590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10873c6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10873cb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::NextHopList&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::NextHopList&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1087440d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108744590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108744a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108744e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10874e390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10874e4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10874e8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10874ed10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::NextHop&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::NextHop&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1087561d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x1087563d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::pit::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::pit::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108756890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Interest&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Interest&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108756a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x108756f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10875d4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::cs::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::cs::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10875d990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10875db90>))
